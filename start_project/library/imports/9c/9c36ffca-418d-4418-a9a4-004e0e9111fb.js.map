{"version":3,"sources":["../../../../assets/script/assets/script/Game.js"],"names":["cc","Class","extends","Component","properties","starPrefab","default","type","Prefab","gameOverPrefab","maxStarDuration","minStarDuration","score","ground","Node","player","scoreDisplay","Label","scoreAudio","url","AudioClip","onLoad","timer","starDuration","spawnNewStar","node","on","EventType","TOUCH_START","touch","event","toux","getLocation","x","TOUCH_MOVE","locx","getComponent","acc","TOUCH_END","newStar","instantiate","addChild","setPosition","getNewStarPosition","game","random0To1","randX","randY","y","jumpHeight","maxX","width","randomMinus1To1","p","start","newgameover","newgame","getScore","unvis","update","dt","gameOver","stopAllActions","gainScore","string","toString","audioEngine","playEffect"],"mappings":"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","file":"Game.js","sourceRoot":"../../../../assets/script","sourcesContent":["// Learn cc.Class:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\n// Learn Attribute:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        starPrefab: {\n            default: null,\n            type: cc.Prefab\n        },\n        gameOverPrefab:{\n            default:null,\n            type: cc.Prefab\n        },\n        // 星星产生后消失时间的随机范围\n        maxStarDuration: 0,\n        minStarDuration: 0,\n        score:0,\n        // 地面节点，用于确定星星生成的高度\n        ground: {\n            default: null,\n            type: cc.Node\n        },\n        // player 节点，用于获取主角弹跳的高度，和控制主角行动开关\n        player: {\n            default: null,\n            type: cc.Node\n        },\n        scoreDisplay: {\n            default: null,\n            type: cc.Label\n        },\n        scoreAudio: {\n            default: null,\n            url: cc.AudioClip\n        },\n        \n        // foo: {\n        //     // ATTRIBUTES:\n        //     default: null,        // The default value will be used only when the component attaching\n        //                           // to a node for the first time\n        //     type: cc.SpriteFrame, // optional, default is typeof default\n        //     serializable: true,   // optional, default is true\n        // },\n        // bar: {\n        //     get () {\n        //         return this._bar;\n        //     },\n        //     set (value) {\n        //         this._bar = value;\n        //     }\n        // },\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    onLoad: function () {\n        // 获取地平面的 y 轴坐标\n        // this.groundY = this.ground.y;    \n        // 生成一个新的星星\n        this.timer = 0;\n        this.starDuration = 0;\n        this.spawnNewStar();\n        this.score = 0;\n        this.node.on(cc.Node.EventType.TOUCH_START,function(touch, event){\n            this.player.toux=touch.getLocation().x;\n            return true;\n        },this) \n        this.node.on(cc.Node.EventType.TOUCH_MOVE,function(touch, event){\n            var locx=touch.getLocation().x;\n            \n            // cc.log(this.player.acc)\n            if(locx>this.player.toux){\n                this.player.getComponent('player').acc=1\n            }else if(locx<this.player.toux){\n                this.player.getComponent('player').acc=-1\n                \n                // cc.log(this.player.getComponent('player').acc)\n            }\n        },this)\n        this.node.on(cc.Node.EventType.TOUCH_END,function(touch, event){\n            // var self=this;\n            this.player.getComponent('player').acc=0\n        }, this)\n    },\n\n    spawnNewStar: function() {\n        // 使用给定的模板在场景中生成一个新节点\n        var newStar = cc.instantiate(this.starPrefab);\n        // 将新增的节点添加到 Canvas 节点下面\n        this.node.addChild(newStar);\n        // 为星星设置一个随机位置\n        newStar.setPosition(this.getNewStarPosition());\n        newStar.getComponent('star').game = this;\n        this.starDuration = this.minStarDuration + cc.random0To1() * (this.maxStarDuration - this.minStarDuration);\n        this.timer = 0;\n    },\n\n    getNewStarPosition: function () {\n        var randX = 0;\n        // 根据地平面位置和主角跳跃高度，随机得到一个星星的 y 坐标\n        var randY = this.ground.y+ cc.random0To1() * this.player.getComponent('player').jumpHeight + 50;\n        // 根据屏幕宽度，随机得到一个星星 x 坐标 \n        var maxX = this.node.width/2;\n        randX = cc.randomMinus1To1() * maxX;\n        // 返回星星坐标\n        return cc.p(randX, randY);\n    },\n\n    start () {\n\n    },\n    \n    newgameover:function(){\n        var newgame=cc.instantiate(this.gameOverPrefab);\n        this.node.addChild(newgame);\n        newgame.setPosition(0,100);\n        newgame.getComponent('gameover').game = this;\n        newgame.getComponent('gameover').getScore();\n        this.player.getComponent(\"player\").unvis();\n    },  \n    update: function (dt) {\n        // 每帧更新计时器，超过限度还没有生成新的星星\n        // 就会调用游戏失败逻辑\n        if (this.timer > this.starDuration) {\n            this.gameOver();\n            return;\n        }\n        this.timer += dt;\n    },\n    gameOver: function () {\n        this.player.stopAllActions(); //停止 player 节点的跳跃动作\n        this.newgameover();\n        // cc.director.loadScene('game');\n    },\n    gainScore: function () {\n        this.score += 1;\n        // 更新 scoreDisplay Label 的文字\n        this.scoreDisplay.string = 'Score: ' + this.score.toString();\n        cc.audioEngine.playEffect(this.scoreAudio, false);\n    },\n    \n});\n"]}