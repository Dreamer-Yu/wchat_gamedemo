{"version":3,"sources":["..\\..\\..\\..\\assets\\script/assets\\script\\Game.js"],"names":["cc","Class","extends","Component","properties","starPrefab","default","type","Prefab","gameOverPrefab","maxStarDuration","minStarDuration","score","ground","Node","player","scoreDisplay","Label","scoreAudio","url","AudioClip","onLoad","timer","starDuration","spawnNewStar","node","on","EventType","TOUCH_START","touch","event","isValid","toux","getLocation","x","TOUCH_MOVE","locx","getComponent","acc","TOUCH_END","newStar","instantiate","addChild","setPosition","getNewStarPosition","game","random0To1","randX","randY","y","jumpHeight","maxX","width","randomMinus1To1","p","start","newgameover","newgame","getScore","destroy","update","dt","gameOver","stopAllActions","gainScore","string","toString","audioEngine","playEffect"],"mappings":"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","file":"Game.js","sourceRoot":"..\\..\\..\\..\\assets\\script","sourcesContent":["// Learn cc.Class:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        starPrefab: {\r\n            default: null,\r\n            type: cc.Prefab\r\n        },\r\n        gameOverPrefab: {\r\n            default: null,\r\n            type: cc.Prefab\r\n        },\r\n        // 星星产生后消失时间的随机范围\r\n        maxStarDuration: 0,\r\n        minStarDuration: 0,\r\n        score: 0,\r\n        // 地面节点，用于确定星星生成的高度\r\n        ground: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n        // player 节点，用于获取主角弹跳的高度，和控制主角行动开关\r\n        player: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n        scoreDisplay: {\r\n            default: null,\r\n            type: cc.Label\r\n        },\r\n        scoreAudio: {\r\n            default: null,\r\n            url: cc.AudioClip\r\n        },\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad: function () {\r\n        // 获取地平面的 y 轴坐标\r\n        // this.groundY = this.ground.y;    \r\n        // 生成一个新的星星\r\n        this.timer = 0;\r\n        this.starDuration = 0;\r\n        this.spawnNewStar();\r\n        this.score = 0;\r\n        this.node.on(cc.Node.EventType.TOUCH_START, function (touch, event) {\r\n            if (cc.isValid(this.player)) {\r\n                this.player.toux = touch.getLocation().x;\r\n                return true;\r\n            }\r\n\r\n        }, this)\r\n        this.node.on(cc.Node.EventType.TOUCH_MOVE, function (touch, event) {\r\n            var locx = touch.getLocation().x;\r\n            if (cc.isValid(this.player)) {\r\n                if (locx > this.player.toux) {\r\n                    this.player.getComponent('player').acc = 1\r\n                } else if (locx < this.player.toux) {\r\n                    this.player.getComponent('player').acc = -1\r\n\r\n                }\r\n            }\r\n\r\n        }, this)\r\n        this.node.on(cc.Node.EventType.TOUCH_END, function (touch, event) {\r\n            // var self=this;\r\n            if (cc.isValid(this.player)) {\r\n                this.player.getComponent('player').acc = 0\r\n\r\n            }\r\n        }, this)\r\n    },\r\n\r\n    spawnNewStar: function () {\r\n        if (!cc.isValid(this.player)) {\r\n            return;\r\n        }\r\n        // 使用给定的模板在场景中生成一个新节点\r\n        var newStar = cc.instantiate(this.starPrefab);\r\n        // 将新增的节点添加到 Canvas 节点下面\r\n        this.node.addChild(newStar);\r\n        // 为星星设置一个随机位置\r\n        newStar.setPosition(this.getNewStarPosition());\r\n        newStar.getComponent('star').game = this;\r\n        this.starDuration = this.minStarDuration + cc.random0To1() * (this.maxStarDuration - this.minStarDuration);\r\n        this.timer = 0;\r\n    },\r\n\r\n    getNewStarPosition: function () {\r\n        var randX = 0;\r\n        // 根据地平面位置和主角跳跃高度，随机得到一个星星的 y 坐标\r\n        var randY = this.ground.y + cc.random0To1() * this.player.getComponent('player').jumpHeight + 50;\r\n        // 根据屏幕宽度，随机得到一个星星 x 坐标 \r\n        var maxX = this.node.width / 2;\r\n        randX = cc.randomMinus1To1() * maxX;\r\n        // 返回星星坐标\r\n        return cc.p(randX, randY);\r\n\r\n    },\r\n\r\n    start() {\r\n\r\n    },\r\n\r\n    newgameover: function () {\r\n        var newgame = cc.instantiate(this.gameOverPrefab);\r\n        this.node.addChild(newgame);\r\n        newgame.setPosition(0, 100);\r\n        newgame.getComponent('gameover').game = this;\r\n        newgame.getComponent('gameover').getScore();\r\n        this.player.destroy();\r\n    },\r\n    update: function (dt) {\r\n        // 每帧更新计时器，超过限度还没有生成新的星星\r\n        // 就会调用游戏失败逻辑\r\n        if (this.timer > this.starDuration) {\r\n            this.gameOver();\r\n            return;\r\n        }\r\n        this.timer += dt;\r\n    },\r\n    gameOver: function () {\r\n        this.player.stopAllActions(); //停止 player 节点的跳跃动作\r\n        this.newgameover();\r\n    },\r\n    gainScore: function () {\r\n        this.score += 1;\r\n        // 更新 scoreDisplay Label 的文字\r\n        this.scoreDisplay.string = 'Score: ' + this.score.toString();\r\n        cc.audioEngine.playEffect(this.scoreAudio, false);\r\n    },\r\n\r\n});\r\n"]}