{"version":3,"sources":["player.js"],"names":["cc","Class","extends","Component","properties","toux","jumpHeight","jumpDuration","maxMoveSpeed","accel","acc","jumpAudio","default","url","AudioClip","setJumpAction","jumpUp","moveBy","p","easing","easeCubicActionOut","jumpDown","easeCubicActionIn","callback","callFunc","playJumpSound","repeatForever","sequence","onLoad","jumpAction","node","runAction","xSpeed","start","unvis","opacity","update","dt","Math","abs","x","audioEngine","playEffect"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACRC,cAAK,CADG;;AAGRC,oBAAY,CAHJ;AAIR;AACAC,sBAAc,CALN;AAMR;AACAC,sBAAc,CAPN;AAQR;AACAC,eAAO,CATC;AAURC,aAAI,CAVI;AAWRC,mBAAW;AACPC,qBAAS,IADF;AAEPC,iBAAKb,GAAGc;AAFD;;AAKX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA9BQ,KAHP;AAmCLC,mBAAe,yBAAY;AACvB;AACA,YAAIC,SAAShB,GAAGiB,MAAH,CAAU,KAAKV,YAAf,EAA6BP,GAAGkB,CAAH,CAAK,CAAL,EAAQ,KAAKZ,UAAb,CAA7B,EAAuDa,MAAvD,CAA8DnB,GAAGoB,kBAAH,EAA9D,CAAb;AACA;AACA,YAAIC,WAAWrB,GAAGiB,MAAH,CAAU,KAAKV,YAAf,EAA6BP,GAAGkB,CAAH,CAAK,CAAL,EAAQ,CAAC,KAAKZ,UAAd,CAA7B,EAAwDa,MAAxD,CAA+DnB,GAAGsB,iBAAH,EAA/D,CAAf;AACA,YAAIC,WAAWvB,GAAGwB,QAAH,CAAY,KAAKC,aAAjB,EAAgC,IAAhC,CAAf;AACA;AACA,eAAOzB,GAAG0B,aAAH,CAAiB1B,GAAG2B,QAAH,CAAYX,MAAZ,EAAoBK,QAApB,EAA8BE,QAA9B,CAAjB,CAAP;AACH,KA3CI;;AA8CL;;AAEAK,YAAO,kBAAY;AACf,aAAKC,UAAL,GAAkB,KAAKd,aAAL,EAAlB;AACA,aAAKe,IAAL,CAAUC,SAAV,CAAoB,KAAKF,UAAzB;AACA;AACA;AACA,aAAKG,MAAL,GAAc,CAAd;AAEH,KAvDI;;AAyDLC,SAzDK,mBAyDI,CAER,CA3DI;;AA4DLC,WAAM,iBAAU;AACZ,aAAKJ,IAAL,CAAUK,OAAV,GAAkB,CAAlB;AACA;AACH,KA/DI;AAgELC,YAAQ,gBAAUC,EAAV,EAAc;AAClB;AACA,YAAI,KAAK3B,GAAL,GAAS,CAAb,EAAgB;AACZ,iBAAKsB,MAAL,IAAe,KAAKvB,KAAL,GAAa4B,EAA5B;AACH,SAFD,MAEO,IAAI,KAAK3B,GAAL,GAAS,CAAb,EAAgB;AACnB,iBAAKsB,MAAL,IAAe,KAAKvB,KAAL,GAAa4B,EAA5B;AACH,SAFM,MAEF;AACD,iBAAKL,MAAL,GAAY,CAAZ;AACH;AACD;AACA,YAAKM,KAAKC,GAAL,CAAS,KAAKP,MAAd,IAAwB,KAAKxB,YAAlC,EAAiD;AAC7C;AACA,iBAAKwB,MAAL,GAAc,KAAKxB,YAAL,GAAoB,KAAKwB,MAAzB,GAAkCM,KAAKC,GAAL,CAAS,KAAKP,MAAd,CAAhD;AACH;;AAED;AACA,aAAKF,IAAL,CAAUU,CAAV,IAAe,KAAKR,MAAL,GAAcK,EAA7B;AACH,KAjFI;AAkFLZ,mBAAe,yBAAY;AACvB;AACAzB,WAAGyC,WAAH,CAAeC,UAAf,CAA0B,KAAK/B,SAA/B,EAA0C,KAA1C;AACH;AArFI,CAAT","file":"player.js","sourceRoot":"../../../../assets/script","sourcesContent":["// Learn cc.Class:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\n// Learn Attribute:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        toux:0,\n\n        jumpHeight: 0,\n        // 主角跳跃持续时间\n        jumpDuration: 0,\n        // 最大移动速度\n        maxMoveSpeed: 0,\n        // 加速度\n        accel: 0,\n        acc:0,\n        jumpAudio: {\n            default: null,\n            url: cc.AudioClip\n        },\n        \n        // foo: {\n        //     // ATTRIBUTES:\n        //     default: null,        // The default value will be used only when the component attaching\n        //                           // to a node for the first time\n        //     type: cc.SpriteFrame, // optional, default is typeof default\n        //     serializable: true,   // optional, default is true\n        // },\n        // bar: {\n        //     get () {\n        //         return this._bar;\n        //     },\n        //     set (value) {\n        //         this._bar = value;\n        //     }\n        // },\n    },\n    setJumpAction: function () {\n        // 跳跃上升\n        var jumpUp = cc.moveBy(this.jumpDuration, cc.p(0, this.jumpHeight)).easing(cc.easeCubicActionOut());\n        // 下落\n        var jumpDown = cc.moveBy(this.jumpDuration, cc.p(0, -this.jumpHeight)).easing(cc.easeCubicActionIn());\n        var callback = cc.callFunc(this.playJumpSound, this);\n        // 不断重复\n        return cc.repeatForever(cc.sequence(jumpUp, jumpDown, callback));\n    },\n    \n\n    // LIFE-CYCLE CALLBACKS:\n    \n    onLoad:function () {\n        this.jumpAction = this.setJumpAction();\n        this.node.runAction(this.jumpAction);\n        // 加速度方向开关\n        // 主角当前水平方向速度\n        this.xSpeed = 0;\n        \n    },\n\n    start () {\n        \n    },\n    unvis:function(){\n        this.node.opacity=0;\n        //this.node.destroy();\n    },\n    update: function (dt) {\n        // 根据当前加速度方向每帧更新速度\n        if (this.acc<0) {\n            this.xSpeed -= this.accel * dt;\n        } else if (this.acc>0) {\n            this.xSpeed += this.accel * dt;\n        }else{\n            this.xSpeed=0;\n        }\n        // 限制主角的速度不能超过最大值\n        if ( Math.abs(this.xSpeed) > this.maxMoveSpeed ) {\n            // if speed reach limit, use max speed with current direction\n            this.xSpeed = this.maxMoveSpeed * this.xSpeed / Math.abs(this.xSpeed);\n        }\n\n        // 根据当前速度更新主角的位置\n        this.node.x += this.xSpeed * dt;\n    },\n    playJumpSound: function () {\n        // 调用声音引擎播放声音\n        cc.audioEngine.playEffect(this.jumpAudio, false);\n    },\n});\n"]}